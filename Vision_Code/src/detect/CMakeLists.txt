cmake_minimum_required(VERSION 3.25)
project(detect)
SET(OPENVINO_PATH "/usr/local/runtime/include")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")

file(GLOB_RECURSE ${PROJECT_NAME}_src ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/src/*.c)
# message(STATUS "src files: ${${PROJECT_NAME}_src}")

add_library(${PROJECT_NAME} OBJECT ${${PROJECT_NAME}_src})
target_compile_features(${PROJECT_NAME} PUBLIC c_std_99 cxx_std_20)

target_include_directories(${PROJECT_NAME} PUBLIC "${OPENVINO_PATH}")
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/inc)

target_link_libraries(${PROJECT_NAME} PUBLIC "/usr/local/runtime/lib/intel64/libopenvino.so")

target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../threads/inc)

target_link_libraries(${PROJECT_NAME} PRIVATE utility)
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../utility/inc)

target_include_directories(${PROJECT_NAME} PRIVATE ../../config/autogenerated_flatbuffers)